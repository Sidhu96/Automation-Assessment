package com.qa.TaskOne;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.PageFactory;

import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import com.relevantcodes.extentreports.LogStatus;

import cucumber.api.PendingException;
import cucumber.api.java.After;
import cucumber.api.java.Before;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;


public class TaskStep {
		public WebDriver driver;
		public static ExtentTest test;
		public static ExtentReports extent;
		
		@Before 
		public void setup() {
			System.setProperty("webdriver.chrome.driver","C:\\Users\\Admin\\Desktop\\chromedriver.exe");
			driver = new ChromeDriver();
			driver.get(T1constant.jenkinsURL);
			driver.manage().window().maximize(); 
			extent = new ExtentReports(T1constant.report, true); 		
			test = extent.startTest("test"); 
		}
		
		@After 
		public void teardown() {
			driver.quit();
			extent.flush();
		}
	
	
	@Given("^that you are on the create UserScreen$")
	public void that_you_are_on_the_create_UserScreen() throws Throwable {
	   WebsiteNav nav = PageFactory.initElements(driver, WebsiteNav.class);
	   test.log(LogStatus.INFO, "Test Has Begun");
	   
	   nav.typeAdminUsername().sendKeys("root");
	   nav.typeAdminPass().sendKeys("root");
	   nav.typeAdminPass().submit();
	   test.log(LogStatus.INFO, "Logging In");
	   
	   nav.navManageJenkins().click();
	   test.log(LogStatus.INFO, "Navigating to Manage Jenkins Page");
	   nav.navManageUsers().click();
	   test.log(LogStatus.INFO, "Navigating to Manage User Page");
	   nav.navCreateUserPage().click();
	   test.log(LogStatus.INFO, "Navigating to Create User Page");
	   
	   
	}

	@When("^the User details are entered on the Create UserScreen$")
	public void the_User_details_are_entered_on_the_Create_UserScreen() throws Throwable {
	   CreateUser newUser = PageFactory.initElements(driver, CreateUser.class);
	   test.log(LogStatus.INFO, "Creating New User");
	   newUser.typeUserName().sendKeys("Sidhu96");
	   newUser.typePassword1().sendKeys("password");
	   newUser.typePassword2().sendKeys("password");
	   newUser.typeName().sendKeys("Rajan Sidhu");
	   newUser.typeEmail().sendKeys("rajan@testing.com");
	   test.log(LogStatus.INFO, "New User Created"); 
	}

	@When("^the details are submitted on the Create UserScreen$")
	public void the_details_are_submitted_on_the_Create_UserScreen() throws Throwable {
	    CreateUser newUser = PageFactory.initElements(driver, CreateUser.class);
	    newUser.createButton().click();
	   
	}

	@Then("^the Username should be visible on the UsersScreen$")
	public void the_Username_should_be_visible_on_the_UsersScreen() throws Throwable {
	    WebsiteNav nav = PageFactory.initElements(driver, WebsiteNav.class);
		driver.get(T1constant.visibleUser);
	    nav.navPeoplePage().click(); 
	    Thread.sleep(1000);   
	    
	}

	@When("^the User details \"([^\"]*)\" username, \"([^\"]*)\" password, \"([^\"]*)\" confirm Password, and \"([^\"]*)\" Fullname are entered on the Create UserScreen$")
	public void the_User_details_username_password_confirm_Password_and_Fullname_are_entered_on_the_Create_UserScreen(String arg1, String arg2, String arg3, String arg4, String arg5) throws Throwable {
	    CreateUser newUser = PageFactory.initElements(driver, CreateUser.class);
	    newUser.typeUserName().sendKeys(arg1);
	    newUser.typePassword1().sendKeys(arg2);
	    newUser.typePassword2().sendKeys(arg3);
	    newUser.typeName().sendKeys(arg4);
	    newUser.typeEmail().sendKeys(arg5);
	}

	@Then("^the \"([^\"]*)\" username should be visible on the UsersScreen$")
	public void the_username_should_be_visible_on_the_UsersScreen(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Given("^the \"([^\"]*)\" username is visible on the UsersScreen$")
	public void the_username_is_visible_on_the_UsersScreen(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@When("^the \"([^\"]*)\" username is clicked on the UserScreen$")
	public void the_username_is_clicked_on_the_UserScreen(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Then("^the User Profile should display the \"([^\"]*)\" username on the ProfileScreen$")
	public void the_User_Profile_should_display_the_username_on_the_ProfileScreen(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Given("^the \"([^\"]*)\" Username's profile page has been loaded$")
	public void the_Username_s_profile_page_has_been_loaded(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Given("^the configure button has been clicked on the profile page$")
	public void the_configure_button_has_been_clicked_on_the_profile_page() throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@When("^I change the old FullName on the Configure Page to a new FullName \"([^\"]*)\"$")
	public void i_change_the_old_FullName_on_the_Configure_Page_to_a_new_FullName(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@When("^I save the changes to the Configure Page$")
	public void i_save_the_changes_to_the_Configure_Page() throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Then("^the Configure Page should show the NewFullName \"([^\"]*)\"$")
	public void the_Configure_Page_should_show_the_NewFullName(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}
}
